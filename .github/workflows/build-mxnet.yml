name: Build mxnet on multiple platforms

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Set CMake version
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.31.0"
      - name: Setup ccache
        uses: chirag-droid/setup-ccache@v2.1
        with:
          key: ccache-${{ github.job }}-${{ matrix.os }}
      # - name: Install uv
      #   uses: astral-sh/setup-uv@v5
      #   with:
      #     version: "0.7.3"
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - name: Check compiler version
        run: ${CC:-cc} --version
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: Build
        id: build
        uses: threeal/cmake-action@v2.1.0
      # - name: Verify lib dependencies
      #   id: lib_output
      #   uses: knicknic/os-specific-run@v1.0.3
      #   with:
      #     macos: |
      #       lib_path="${{ steps.build.outputs.build-dir }}/install_root/lib/libmxnet.dylib"
      #       otool -L $lib_path | tee -a "$GITHUB_STEP_SUMMARY"
      #       echo "path=${lib_path}" >> "$GITHUB_OUTPUT"
      #     linux: |
      #       lib_path="${{ steps.build.outputs.build-dir }}/install_root/lib/libmxnet.so"
      #       ldd $lib_path | tee -a "$GITHUB_STEP_SUMMARY"
      #       echo "path=${lib_path}" >> "$GITHUB_OUTPUT"
      # - name: Overwrite Python platform tag
      #   uses: knicknic/os-specific-run@v1.0.3
      #   with:
      #     macos: |
      #       if [[ $(arch) == 'arm64' ]]; then
      #         echo '_PYTHON_HOST_PLATFORM=macosx-11.0-arm64' >> $GITHUB_ENV
      #         echo 'ARCHFLAGS="-arch arm64"'' >> $GITHUB_ENV
      #       else
      #         echo '_PYTHON_HOST_PLATFORM=macosx-10.9-x86_64' >> $GITHUB_ENV
      #         echo 'ARCHFLAGS="-arch x86_64"'' >> $GITHUB_ENV
      #       fi
      # - name: Bundle Python wheel
      #   id: wheel_output
      #   run: |
      #     cp "${{ steps.lib_output.outputs.path }}" mxnet/python/mxnet/
      #     pip wheel mxnet/python
      #     wheel_path=(mxnet-*.whl)
      #     echo "path=${wheel_path}" >> "$GITHUB_OUTPUT"
      # - name: 'Upload artifacts'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: artifacts
      #     path: |
      #       ${{ steps.lib_output.outputs.path }}
      #       ${{ steps.wheel_output.outputs.path }}
